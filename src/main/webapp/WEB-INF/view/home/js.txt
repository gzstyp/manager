通用的方法,依赖jQuery
datagrid正在加载:AppKey.loadMsg;或AppKey.loadMsg();
赋值:winFn.setDomValue(dom,value);
获取值:winFn.getDomValue(dom);
强制获取焦点:winFn.focus('#xx');
winFn.setDataSelect(defaultText,emptyText,'#id或.class',data,value,showText,select);一般第3个参数都是id，即可'#Xxx'
恢复下拉选项:winFn.setSelectReset(selectDom,defaultText);
只适用于最顶级的级联的更改事件:winFn.onchange(dom,onchangeCall);可以在成功加载list数据之后再调用本方法;
禁用滚动条:winFn.overflowHidden();
启用滚动条:winFn.overflowAuto();
自定义正在加载效果,没遮罩层:winFn.ajaxLoading(dom,msg);
两个时间比较:winFn.dateCompare(domStartTime,domEndTime);
POST请求远程数据,不带正在加载提示信息;winFn.ajaxPost(url,params,succeed,failure);
GET请求远程数据,不带正在加载提示信息;winFn.ajaxGet(url,params,succeed,failure);
刷新验证码:winFn.refreshCode(domImage,url);
显示分页条上的正在加载效果:winFn.pageBarShow();
隐藏关闭分页条上的正在加载效果:winFn.pageBarHide();
单个元素或节点赋值,不含html:winFn.setText(dom,value);
用于批量操作选择;checkboxName是name的标识:winFn.checkboxBatch(checkboxName,flag);
获取数组的长度:winFn.arrLength(arr,flag);winFn.arrLength(arr);
判断是否已选择复选框,用法:if(!winFn.checkboxSelect('#menu_is_select')){};
以复选框的选择而全选否则以取消而全部取消选择;局部areaDom块,为空时是整个页面;winFn.checkDom(checkboxObj,checkboxName,areaDom);
以复选框的选中或取消对应的操作:winFn.checkFn(checkboxObj,on,off);
以复选框的选择或取消对应的起始时间到结束时间的开关:winFn.checkBetween(this,start,end);obj一般填写this; onchange="winFn.checkBetween(this,'#start','#end');
全部选择或全部取消操作:局部areaDom块,为空时是整个页面;checkboxName是name的标识;flag如果为true时全部选择,为false或其他则全部取消选择;用法:winFn.checkboxAll(checkboxName,flag,areaDom);
反选复选框:局部areaDom块或整个页面的复选框的反选复选框;checkboxName是name的标识;用法:winFn.checkboxInverse(checkboxName,areaDom);
选择奇数的复选框;局部areaDom块,为空时是整个页面:winFn.checkboxOdd(areaDom);
选中所有[even偶数]|[odd奇数](index从0开始);局部areaDom块,为空时是整个页面:winFn.checkboxFlag(flag,areaDom);
清空表单-不含hidden,用法:winFn.clearFormData('#sys_menu_type');
Js随机产生4个数字或字母:winFn.randomWord();
限制输入长度:winFn.limitLength(dom,count);
获取下拉列表的所选的文本:winFn.select.getText('#gender');
获取下拉列表的所选值:winFn.select.getValue('#gender');
radio根据Value值设置Radio为选中状态;jquery给单选框的赋值;winFn.radioSetValue(radioName,value);winFn.radioSetValue('STATE',"${pd.STATE}");
获取单选框的值;winFn.getRadioValue(radioName);
为指定name的value的单选框的赋值,适用于iCheck组件;winFn.setRadioValue(radioName,value);
启用编辑|打开[含下拉菜单或input]:winFn.input.on(inputDom);
禁用|关闭|设置不可编辑或输入[含下拉菜单或input]:winFn.input.off(inputDom);
初始化表格的行的鼠标滑动样式效果;调用:winFn.tableMouse('cls');
下拉菜单用法:winFn.uiSelectInit('#sys_menu_edit',function(value){},width);第1个参数是父级的节点,第3个参数是下拉列表的宽度
清空自定义下拉列表;winFn.uiSelectReset('#sys_menu_edit','选择类型',function(){});第1个参数是父级的节点第2个参数是下拉列表默认显示的文字,回调callFn
给自定义的下拉列表赋值;用法:winFn.uiSelectSetValue(parentDom父级的dom节点,,text需要默认显示的文字,value传递进去的数值,回调callFn);
给自定义的下拉列表禁用或启用操作;winFn.uiSelectDisabled(parentDom,type,callFn);type为1禁用,否则启用;
获取浏览器可视区域宽度,兼容主流浏览器:winFn.fnGetWidth();或winFn.fnGetWidth;
获取浏览器可视区域高度,兼容主流浏览器:winFn.fnGetHeight();
上传按钮,dom为按钮或a标签;fileField为文件域的dom元素:winFn.domUpload(dom,fileField,callback);
限制输入长度用法:maxlength="64" onkeyup="return winFn.inputLimit(this,'xxx');"
为datagrid过滤数据:winFn.dataFilter(data);
初始化自定义的复选框|单选框元素样式;用法:winFn.uiCheckboxRadio(areaDom);
初始化以单个复选框的选择而全选;以取消选择而全部取消选择的自定义复选框;handleDom[单个复选框元素],checkbokName[checkbox复选框的name],parentDom[父级节点的块,如果为空则是整个页面]:winFn.uiCheckboxHandle(handleDom,checkbokName,parentDom);
指定文件类型,返回false时说明不是指定的文件类型;用法:winFn.checkExt(originalFile,'png,gif,jpg');
验证字符串是否是json对象:winFn.jsonVerify(data);是返回true,否则false;
获取form表单参数,用于参数前必须带:winFn.formParams(form);返回的是带&的字符串;推荐使用!
以form的name获取表单参数:winFn.formAjaxParams(formDom);返回的是Object,key-value
判断表单是否有是否已填数据,已填有数据返回true;否则返回false;用法:winFn.checkParams(form);
打开新页面,如有参数拼装在url里:winFn.winOpen(url);
下载文件,含文件名的参数拼装在url里:winFn.downloadFile(url);用法:winFn.downloadFile(url);layerFn.center(AppKey.code.code200,'已进入后台处理,请耐心等待,处理完成将会自动下载!');
把字符串解析为json格式:winFn.parseJson(str);
获取当前YYYY-MM-DD日期:winFn.getCurrentDate();
单文件上传:winFn.uploadSingle(url,'#form',callBack,error);
多文件上传:winFn.uploadMulti(url,callBack,error);
按Enter回车键事件:winFn.Enter(fn);
IE低版本支持默认现实提示信息:winFn.iePlaceholder();
元素标签是否启用,默认为启用:tagEnabled(domFlag,true);
删除数组little在数组large中的元素;winFn.removeLargeExistLittle(plsition_vals,hole_plsition_vals);
判断一个元素是否存在于这个数组中,存在true,否则false:winFn.checkinArray(val,arrs);
-------------------------------------------------------------------------------------------------------------------------------------------
opts插件开发、定义
layer单个按钮的提示框,不带回调事件:opts.dialog(options);不带code就不显示图标;
按键盘监听事件回调:opts.event({code:27,fn:function(){}});
-------------------------------------------------------------------------------------------------------------------------------------------
easyui专属方法,依赖easyui
euiFn.datagrid.settings.pageSize
euiFn.datagrid.settings.pageList
跳转页面:euiFn.toPage(href,text);
刷新整个页面,用法:euiFn.refreshPage();
刷新Datagrid数据:euiFn.refreshDatagrid(datagridId,params,type);当type为1时重新加载并保持在当前页;如type不为1时可以不写;当然搜索时params可能含url地址,如:'roles/listData?'+params;
用于批量操作选择:euiFn.getIdsBatch(domDatagrid,flag,field);domDatagrid是datagrid的标识,flag是分隔符若为空时是,;field一般指的是id主键若为空时是id
清空datagrid数据:euiFn.datagridClear(datagridDom);
右下边提示,一般用于表单提交操作后,如添加;修改;删除的处理显示结果:euiFn.showRb(code,msg);
根据选择行id查询获取行的数据;用法:euiFn.queryRowDataById(url,id,call);
自定义加载效果:euiFn.loadShow(msg);msg为空时关闭
格式化日期YYYY-MM-DD;euiFn.dateFormatter(value);
日期选择框的启禁用控制;euiFn.datebox(dom,checked);
给类型easyui-datebox控件赋当前时间值:euiFn.dateboxSetCurrentDate(dom);
获取类型easyui-datebox控件赋值:euiFn.dateboxGetValue(dom);
给类型easyui-datebox控件赋值:euiFn.dateboxSetValue(dom,value);
判断是否已选中列表行:euiFn.getRow(datagrid);
-------------------------------------------------------------------------------------------------------------------------------------------
依赖jQuery
验证是否指定的文件格式:verifyFn.checkFileType(this,'excel_file','请选择Excel文件格式','xls,xlsx');
验证是否是正整数,是返回true,否则返回false:verifyFn.checkIsNum(value);
验证输入框是否已输入数据,未输入返回true,否则返回false:verifyFn.inputRequired(dom);
验证是否为空:verifyFn.isEmpty(value);
验证是否为email格式:verifyFn.isEmail(value);
判断这两个数据是否相等，区分大小写,不相等返回true:verifyFn.checkEqual(value1,value2);
检查是否支持对应的浏览器:verifyFn.checkBrowser(hint,target);
验证手机号或电话号码是否正确:verifyFn.checkTelephone(value);
-------------------------------------------------------------------------------------------------------------------------------------------
layer专属方法
默认的弹出框的宽高度：layerFn.area.h500xw450
提示正在操作：layerFn.loadAjax(msg);
提示信息或弹出框的关闭：layerFn.layerClose(index);
确认操作:layerFn.handleVerify(msg,fnVerify,fnCancel);
ajax的post用法:layerFn.ajaxPostHint(url,msg,params,fnSuccess,fnError);
ajax的get用法:layerFn.ajaxGetHint(url,msg,params,fnSuccess,fnError);
ajax的get请求且已做请求失败的处理:layerFn.ajaxHint(url,msg,params,fnSuccess);
显示,用法:layerFn.loading.show('消息');
关闭隐藏:layerFn.loading.hide(当前layer弹窗索引);
关闭或layerFn.loading.closeAll();
提交,仅适用于增、删、改操作;layerFn.submit(url,params,fnSuccess);成功时才关闭对话框,所以不需要处理失败的回调及code为200以外的数据处理
仅适用于查询操作;layerFn.ajaxRequestHint(url,params,fnSuccess,msg);成功时才关闭对话框,所以不需要处理失败的回调及code为200以外的数据处理
以id查询单条数据的全部字段信息,不带正在加载的提示信息,无需处理失败的回调及code为200以外的数据处理,用法:layerFn.queryById(url,id,succeed);
以id查询单条数据的全部字段信息,带正在加载的提示信息,无需处理失败的回调及code为200以外的数据处理,用法:layerFn.queryByIdHint(url,id,msg,fnSuccess);
根据id删除数据;用法:layerFn.delByIdHint(url,id,msg,fnSuccess);无需处理失败的回调及code为200以外的数据处理
删除[含批量]数据;用法:layerFn.delBatchHint(url,ids,msg,fnSuccess);无需处理失败的回调及code为200以外的数据处理
用于检测检查是否已登录超时,提示未登录或登录已超时并返回登录页面:layerFn.timeoutHint(err);
通用的下拉列表选择器,可用于级联操作,后台直接返回的是jsonArray,级联示例:onchange="thisPage.onChangeXxx(this.value,'#domId');"
通用的下拉列表选择器,可用于级联操作,有验证操作,后台返回的是json里含有listData,即data.listData,判断是否有值或是否正常,级联示例:onchange="thisPage.onChangeXxx(this.value,'#domId');"
动态为自定义下拉菜单样式初始化:layerFn.selectUI(url,params,defaultText,emptyText,selectDom,value,showText,select,parentDom,callSelectInit,width);
居中显示,一般用于验证表单提交操作,或用于查询操作的处理系统异常结果:layerFn.center(code,msg);
带回调的确认操作:layerFn.confirm(msg,function(){});
对话框关闭事件,不管按确定按钮或右上角的按钮都会触发事件:layerFn.closeEvent(code,msg,function(){});
单个按钮的提示框,不带回调事件:layerFn.alert(msg,code);code不为空且值为[AppKey.code.code198,199,200,201,202,203,204,205,206,207]之一时显示图标
按Esc键关闭layer对话框或仅用于查看的layer层:layerFn.EscLayer(index);
判断是否已登录,未登录直接跳转到jsp登录页面,否则返回当前传递的对象:layerFn.checkLogin();
第2个按钮的没有事件的;第5个参数是按钮名称及后面跟随是对应事件;最后一个参数是cancelCall是右上角关闭的事件
用于编辑或添加,调用方法:layerFn.addOrEdit(title,domDivId,[width,height],function(index,layero){},btn3,btn3Call);第5个参数是第3个按钮名称[支持html],第6个参数是5个按钮参数是事件;不含右上角关闭的事件
用于编辑|添加|查看的右边Right的弹出框,但是IE8不兼容:layerFn.winRUrl('编辑','page?page=edit','1000px',function(index,layero){},btn);最后一个参数不为空时则是单个按钮
用于编辑|添加|查看的右边Right的弹出框:layerFn.winRDom(title,domDivId,'1000px',function(index,layero){},btn);最后一个参数btn不为空时则是单个按钮,且callback可以为null
KindEditor编辑;调用方法:layerFn.winKindEditor(title,domDivId,textareaId,[width,height],function(index,layero){},btn3,btn3Call);最后1个参数是倒数第2个按钮名称[支持html]回调,不含右上角关闭的事件
获取KindEditor数据:layerFn.getKindEditorData();
百度ueditor编辑;调用方法:layerFn.winUeditor(title,domDivId,'script_editor',[width,height],data,function(index,layero){},btn3,btn3Call);最后1个参数是倒数第2个按钮名称[支持html]回调,不含右上角关闭的事件,注意script_editor是不带#或.的选择器
用于编辑|添加|查看的居中的弹出框,但是IE8不兼容:layerFn.winUrl('编辑','page?page=edit',[width,height],function(index,layero){},btn);最后一个参数不为空时则是单个按钮
用于编辑|添加|查看的居中的弹出框:layerFn.winDom(title,domDivId,[width,height],function(index,layero){},btn);最后一个参数btn不为空时则是单个按钮,且callback可以为null
打印功能:layerFn.winPrint(title,domDivId,[width,height],callback);
提示框:layerFn.tips('#id或者.class','请填写内容');
获取layerFn.winUrl()或layerFn.winRUrl()打开新页面的js方法及属性:var iframeWin = layerFn.getIframe(layero);
适用于查看,带自动关闭的,当time为空或为0时是不会自动关闭;layerFn.viewDialog(title,domDivId,[width,height],time);
跳转到登录页面:layerFn.pageLogin(code,msg);
跳转到后台页面:layerFn.pageControl(code,msg);
右上角1,4,6是抖动:layerFn.winLayer.rt(msg);
右下角:layerFn.winLayer.rb(msg);
居中:layerFn.winLayer.cc(msg,anim);
居中center偏上top;layerFn.showCT(AppKey.code.code200,msg);
